// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: api/proto/peer.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Peer struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DeviceId       string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	KnownAddresses []string               `protobuf:"bytes,3,rep,name=known_addresses,json=knownAddresses,proto3" json:"known_addresses,omitempty"`
	IsTrusted      bool                   `protobuf:"varint,4,opt,name=is_trusted,json=isTrusted,proto3" json:"is_trusted,omitempty"`
	LastSeen       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	Status         PeerStatus             `protobuf:"varint,6,opt,name=status,proto3,enum=aether.api.PeerStatus" json:"status,omitempty"`
	PublicKey      string                 `protobuf:"bytes,7,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Peer) Reset() {
	*x = Peer{}
	mi := &file_api_proto_peer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{0}
}

func (x *Peer) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *Peer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Peer) GetKnownAddresses() []string {
	if x != nil {
		return x.KnownAddresses
	}
	return nil
}

func (x *Peer) GetIsTrusted() bool {
	if x != nil {
		return x.IsTrusted
	}
	return false
}

func (x *Peer) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *Peer) GetStatus() PeerStatus {
	if x != nil {
		return x.Status
	}
	return PeerStatus_PEER_STATUS_UNKNOWN
}

func (x *Peer) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Peer) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Peer) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type DiscoverPeersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LanOnly       bool                   `protobuf:"varint,1,opt,name=lan_only,json=lanOnly,proto3" json:"lan_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoverPeersRequest) Reset() {
	*x = DiscoverPeersRequest{}
	mi := &file_api_proto_peer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoverPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverPeersRequest) ProtoMessage() {}

func (x *DiscoverPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverPeersRequest.ProtoReflect.Descriptor instead.
func (*DiscoverPeersRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{1}
}

func (x *DiscoverPeersRequest) GetLanOnly() bool {
	if x != nil {
		return x.LanOnly
	}
	return false
}

type DiscoverPeersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *Status                `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Peers         []*Peer                `protobuf:"bytes,2,rep,name=peers,proto3" json:"peers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoverPeersResponse) Reset() {
	*x = DiscoverPeersResponse{}
	mi := &file_api_proto_peer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoverPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverPeersResponse) ProtoMessage() {}

func (x *DiscoverPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverPeersResponse.ProtoReflect.Descriptor instead.
func (*DiscoverPeersResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{2}
}

func (x *DiscoverPeersResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DiscoverPeersResponse) GetPeers() []*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

type ConnectToPeerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerId        string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectToPeerRequest) Reset() {
	*x = ConnectToPeerRequest{}
	mi := &file_api_proto_peer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectToPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectToPeerRequest) ProtoMessage() {}

func (x *ConnectToPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectToPeerRequest.ProtoReflect.Descriptor instead.
func (*ConnectToPeerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{3}
}

func (x *ConnectToPeerRequest) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

type DisconnectFromPeerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerId        string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisconnectFromPeerRequest) Reset() {
	*x = DisconnectFromPeerRequest{}
	mi := &file_api_proto_peer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectFromPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectFromPeerRequest) ProtoMessage() {}

func (x *DisconnectFromPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectFromPeerRequest.ProtoReflect.Descriptor instead.
func (*DisconnectFromPeerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{4}
}

func (x *DisconnectFromPeerRequest) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

type ListPeersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OnlineOnly    bool                   `protobuf:"varint,1,opt,name=online_only,json=onlineOnly,proto3" json:"online_only,omitempty"`
	TrustedOnly   bool                   `protobuf:"varint,2,opt,name=trusted_only,json=trustedOnly,proto3" json:"trusted_only,omitempty"`
	Pagination    *PaginationRequest     `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPeersRequest) Reset() {
	*x = ListPeersRequest{}
	mi := &file_api_proto_peer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeersRequest) ProtoMessage() {}

func (x *ListPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeersRequest.ProtoReflect.Descriptor instead.
func (*ListPeersRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{5}
}

func (x *ListPeersRequest) GetOnlineOnly() bool {
	if x != nil {
		return x.OnlineOnly
	}
	return false
}

func (x *ListPeersRequest) GetTrustedOnly() bool {
	if x != nil {
		return x.TrustedOnly
	}
	return false
}

func (x *ListPeersRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListPeersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Peers         []*Peer                `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	Pagination    *PaginationResponse    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPeersResponse) Reset() {
	*x = ListPeersResponse{}
	mi := &file_api_proto_peer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeersResponse) ProtoMessage() {}

func (x *ListPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeersResponse.ProtoReflect.Descriptor instead.
func (*ListPeersResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{6}
}

func (x *ListPeersResponse) GetPeers() []*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *ListPeersResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetPeerInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerId        string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPeerInfoRequest) Reset() {
	*x = GetPeerInfoRequest{}
	mi := &file_api_proto_peer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPeerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeerInfoRequest) ProtoMessage() {}

func (x *GetPeerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeerInfoRequest.ProtoReflect.Descriptor instead.
func (*GetPeerInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{7}
}

func (x *GetPeerInfoRequest) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

type PeerInfoResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Status         *Status                `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Peer           *Peer                  `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	SharedFolders  []string               `protobuf:"bytes,3,rep,name=shared_folders,json=sharedFolders,proto3" json:"shared_folders,omitempty"`
	SharedFiles    int32                  `protobuf:"varint,4,opt,name=shared_files,json=sharedFiles,proto3" json:"shared_files,omitempty"`
	TotalChunks    int32                  `protobuf:"varint,5,opt,name=total_chunks,json=totalChunks,proto3" json:"total_chunks,omitempty"`
	LastActivity   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_activity,json=lastActivity,proto3" json:"last_activity,omitempty"`
	ConnectionType string                 `protobuf:"bytes,7,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
	LatencyMs      int64                  `protobuf:"varint,8,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PeerInfoResponse) Reset() {
	*x = PeerInfoResponse{}
	mi := &file_api_proto_peer_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerInfoResponse) ProtoMessage() {}

func (x *PeerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerInfoResponse.ProtoReflect.Descriptor instead.
func (*PeerInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{8}
}

func (x *PeerInfoResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *PeerInfoResponse) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *PeerInfoResponse) GetSharedFolders() []string {
	if x != nil {
		return x.SharedFolders
	}
	return nil
}

func (x *PeerInfoResponse) GetSharedFiles() int32 {
	if x != nil {
		return x.SharedFiles
	}
	return 0
}

func (x *PeerInfoResponse) GetTotalChunks() int32 {
	if x != nil {
		return x.TotalChunks
	}
	return 0
}

func (x *PeerInfoResponse) GetLastActivity() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivity
	}
	return nil
}

func (x *PeerInfoResponse) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

func (x *PeerInfoResponse) GetLatencyMs() int64 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

type TrustPeerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerId        string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrustPeerRequest) Reset() {
	*x = TrustPeerRequest{}
	mi := &file_api_proto_peer_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrustPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustPeerRequest) ProtoMessage() {}

func (x *TrustPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustPeerRequest.ProtoReflect.Descriptor instead.
func (*TrustPeerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{9}
}

func (x *TrustPeerRequest) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

type UntrustPeerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerId        string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UntrustPeerRequest) Reset() {
	*x = UntrustPeerRequest{}
	mi := &file_api_proto_peer_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UntrustPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UntrustPeerRequest) ProtoMessage() {}

func (x *UntrustPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UntrustPeerRequest.ProtoReflect.Descriptor instead.
func (*UntrustPeerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{10}
}

func (x *UntrustPeerRequest) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

type RemovePeerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerId        string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemovePeerRequest) Reset() {
	*x = RemovePeerRequest{}
	mi := &file_api_proto_peer_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemovePeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePeerRequest) ProtoMessage() {}

func (x *RemovePeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePeerRequest.ProtoReflect.Descriptor instead.
func (*RemovePeerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{11}
}

func (x *RemovePeerRequest) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

// Bağlantı istekleri için mesajlar
type GetPendingConnectionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPendingConnectionsRequest) Reset() {
	*x = GetPendingConnectionsRequest{}
	mi := &file_api_proto_peer_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPendingConnectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPendingConnectionsRequest) ProtoMessage() {}

func (x *GetPendingConnectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPendingConnectionsRequest.ProtoReflect.Descriptor instead.
func (*GetPendingConnectionsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{12}
}

type GetPendingConnectionsResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Status             *Status                `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	PendingConnections []*PendingConnection   `protobuf:"bytes,2,rep,name=pending_connections,json=pendingConnections,proto3" json:"pending_connections,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetPendingConnectionsResponse) Reset() {
	*x = GetPendingConnectionsResponse{}
	mi := &file_api_proto_peer_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPendingConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPendingConnectionsResponse) ProtoMessage() {}

func (x *GetPendingConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPendingConnectionsResponse.ProtoReflect.Descriptor instead.
func (*GetPendingConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{13}
}

func (x *GetPendingConnectionsResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetPendingConnectionsResponse) GetPendingConnections() []*PendingConnection {
	if x != nil {
		return x.PendingConnections
	}
	return nil
}

type PendingConnection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	DeviceName    string                 `protobuf:"bytes,2,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PendingConnection) Reset() {
	*x = PendingConnection{}
	mi := &file_api_proto_peer_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PendingConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingConnection) ProtoMessage() {}

func (x *PendingConnection) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingConnection.ProtoReflect.Descriptor instead.
func (*PendingConnection) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{14}
}

func (x *PendingConnection) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *PendingConnection) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *PendingConnection) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type AcceptConnectionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptConnectionRequest) Reset() {
	*x = AcceptConnectionRequest{}
	mi := &file_api_proto_peer_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptConnectionRequest) ProtoMessage() {}

func (x *AcceptConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptConnectionRequest.ProtoReflect.Descriptor instead.
func (*AcceptConnectionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{15}
}

func (x *AcceptConnectionRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type RejectConnectionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectConnectionRequest) Reset() {
	*x = RejectConnectionRequest{}
	mi := &file_api_proto_peer_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectConnectionRequest) ProtoMessage() {}

func (x *RejectConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectConnectionRequest.ProtoReflect.Descriptor instead.
func (*RejectConnectionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{16}
}

func (x *RejectConnectionRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *RejectConnectionRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// P2P bağlantı istek mesajları (binary protokol için)
type ConnectionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	DeviceName    string                 `protobuf:"bytes,2,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionRequest) Reset() {
	*x = ConnectionRequest{}
	mi := &file_api_proto_peer_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionRequest) ProtoMessage() {}

func (x *ConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionRequest.ProtoReflect.Descriptor instead.
func (*ConnectionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{17}
}

func (x *ConnectionRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ConnectionRequest) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *ConnectionRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type ConnectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accepted      bool                   `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	DeviceId      string                 `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionResponse) Reset() {
	*x = ConnectionResponse{}
	mi := &file_api_proto_peer_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionResponse) ProtoMessage() {}

func (x *ConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_peer_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionResponse.ProtoReflect.Descriptor instead.
func (*ConnectionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_peer_proto_rawDescGZIP(), []int{18}
}

func (x *ConnectionResponse) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *ConnectionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ConnectionResponse) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

var File_api_proto_peer_proto protoreflect.FileDescriptor

const file_api_proto_peer_proto_rawDesc = "" +
	"\n" +
	"\x14api/proto/peer.proto\x12\n" +
	"aether.api\x1a\x16api/proto/common.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xfd\x02\n" +
	"\x04Peer\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12'\n" +
	"\x0fknown_addresses\x18\x03 \x03(\tR\x0eknownAddresses\x12\x1d\n" +
	"\n" +
	"is_trusted\x18\x04 \x01(\bR\tisTrusted\x127\n" +
	"\tlast_seen\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x12.\n" +
	"\x06status\x18\x06 \x01(\x0e2\x16.aether.api.PeerStatusR\x06status\x12\x1d\n" +
	"\n" +
	"public_key\x18\a \x01(\tR\tpublicKey\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"1\n" +
	"\x14DiscoverPeersRequest\x12\x19\n" +
	"\blan_only\x18\x01 \x01(\bR\alanOnly\"k\n" +
	"\x15DiscoverPeersResponse\x12*\n" +
	"\x06status\x18\x01 \x01(\v2\x12.aether.api.StatusR\x06status\x12&\n" +
	"\x05peers\x18\x02 \x03(\v2\x10.aether.api.PeerR\x05peers\"/\n" +
	"\x14ConnectToPeerRequest\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\"4\n" +
	"\x19DisconnectFromPeerRequest\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\"\x95\x01\n" +
	"\x10ListPeersRequest\x12\x1f\n" +
	"\vonline_only\x18\x01 \x01(\bR\n" +
	"onlineOnly\x12!\n" +
	"\ftrusted_only\x18\x02 \x01(\bR\vtrustedOnly\x12=\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2\x1d.aether.api.PaginationRequestR\n" +
	"pagination\"{\n" +
	"\x11ListPeersResponse\x12&\n" +
	"\x05peers\x18\x01 \x03(\v2\x10.aether.api.PeerR\x05peers\x12>\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1e.aether.api.PaginationResponseR\n" +
	"pagination\"-\n" +
	"\x12GetPeerInfoRequest\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\"\xda\x02\n" +
	"\x10PeerInfoResponse\x12*\n" +
	"\x06status\x18\x01 \x01(\v2\x12.aether.api.StatusR\x06status\x12$\n" +
	"\x04peer\x18\x02 \x01(\v2\x10.aether.api.PeerR\x04peer\x12%\n" +
	"\x0eshared_folders\x18\x03 \x03(\tR\rsharedFolders\x12!\n" +
	"\fshared_files\x18\x04 \x01(\x05R\vsharedFiles\x12!\n" +
	"\ftotal_chunks\x18\x05 \x01(\x05R\vtotalChunks\x12?\n" +
	"\rlast_activity\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\flastActivity\x12'\n" +
	"\x0fconnection_type\x18\a \x01(\tR\x0econnectionType\x12\x1d\n" +
	"\n" +
	"latency_ms\x18\b \x01(\x03R\tlatencyMs\"+\n" +
	"\x10TrustPeerRequest\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\"-\n" +
	"\x12UntrustPeerRequest\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\",\n" +
	"\x11RemovePeerRequest\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\"\x1e\n" +
	"\x1cGetPendingConnectionsRequest\"\x9b\x01\n" +
	"\x1dGetPendingConnectionsResponse\x12*\n" +
	"\x06status\x18\x01 \x01(\v2\x12.aether.api.StatusR\x06status\x12N\n" +
	"\x13pending_connections\x18\x02 \x03(\v2\x1d.aether.api.PendingConnectionR\x12pendingConnections\"o\n" +
	"\x11PendingConnection\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1f\n" +
	"\vdevice_name\x18\x02 \x01(\tR\n" +
	"deviceName\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\"6\n" +
	"\x17AcceptConnectionRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\"N\n" +
	"\x17RejectConnectionRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"o\n" +
	"\x11ConnectionRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1f\n" +
	"\vdevice_name\x18\x02 \x01(\tR\n" +
	"deviceName\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\"g\n" +
	"\x12ConnectionResponse\x12\x1a\n" +
	"\baccepted\x18\x01 \x01(\bR\baccepted\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1b\n" +
	"\tdevice_id\x18\x03 \x01(\tR\bdeviceId2\xdd\x06\n" +
	"\vPeerService\x12T\n" +
	"\rDiscoverPeers\x12 .aether.api.DiscoverPeersRequest\x1a!.aether.api.DiscoverPeersResponse\x12E\n" +
	"\rConnectToPeer\x12 .aether.api.ConnectToPeerRequest\x1a\x12.aether.api.Status\x12O\n" +
	"\x12DisconnectFromPeer\x12%.aether.api.DisconnectFromPeerRequest\x1a\x12.aether.api.Status\x12H\n" +
	"\tListPeers\x12\x1c.aether.api.ListPeersRequest\x1a\x1d.aether.api.ListPeersResponse\x12K\n" +
	"\vGetPeerInfo\x12\x1e.aether.api.GetPeerInfoRequest\x1a\x1c.aether.api.PeerInfoResponse\x12=\n" +
	"\tTrustPeer\x12\x1c.aether.api.TrustPeerRequest\x1a\x12.aether.api.Status\x12A\n" +
	"\vUntrustPeer\x12\x1e.aether.api.UntrustPeerRequest\x1a\x12.aether.api.Status\x12?\n" +
	"\n" +
	"RemovePeer\x12\x1d.aether.api.RemovePeerRequest\x1a\x12.aether.api.Status\x12l\n" +
	"\x15GetPendingConnections\x12(.aether.api.GetPendingConnectionsRequest\x1a).aether.api.GetPendingConnectionsResponse\x12K\n" +
	"\x10AcceptConnection\x12#.aether.api.AcceptConnectionRequest\x1a\x12.aether.api.Status\x12K\n" +
	"\x10RejectConnection\x12#.aether.api.RejectConnectionRequest\x1a\x12.aether.api.StatusB(Z&github.com/aether/sync/api/proto;protob\x06proto3"

var (
	file_api_proto_peer_proto_rawDescOnce sync.Once
	file_api_proto_peer_proto_rawDescData []byte
)

func file_api_proto_peer_proto_rawDescGZIP() []byte {
	file_api_proto_peer_proto_rawDescOnce.Do(func() {
		file_api_proto_peer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_peer_proto_rawDesc), len(file_api_proto_peer_proto_rawDesc)))
	})
	return file_api_proto_peer_proto_rawDescData
}

var file_api_proto_peer_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_api_proto_peer_proto_goTypes = []any{
	(*Peer)(nil),                          // 0: aether.api.Peer
	(*DiscoverPeersRequest)(nil),          // 1: aether.api.DiscoverPeersRequest
	(*DiscoverPeersResponse)(nil),         // 2: aether.api.DiscoverPeersResponse
	(*ConnectToPeerRequest)(nil),          // 3: aether.api.ConnectToPeerRequest
	(*DisconnectFromPeerRequest)(nil),     // 4: aether.api.DisconnectFromPeerRequest
	(*ListPeersRequest)(nil),              // 5: aether.api.ListPeersRequest
	(*ListPeersResponse)(nil),             // 6: aether.api.ListPeersResponse
	(*GetPeerInfoRequest)(nil),            // 7: aether.api.GetPeerInfoRequest
	(*PeerInfoResponse)(nil),              // 8: aether.api.PeerInfoResponse
	(*TrustPeerRequest)(nil),              // 9: aether.api.TrustPeerRequest
	(*UntrustPeerRequest)(nil),            // 10: aether.api.UntrustPeerRequest
	(*RemovePeerRequest)(nil),             // 11: aether.api.RemovePeerRequest
	(*GetPendingConnectionsRequest)(nil),  // 12: aether.api.GetPendingConnectionsRequest
	(*GetPendingConnectionsResponse)(nil), // 13: aether.api.GetPendingConnectionsResponse
	(*PendingConnection)(nil),             // 14: aether.api.PendingConnection
	(*AcceptConnectionRequest)(nil),       // 15: aether.api.AcceptConnectionRequest
	(*RejectConnectionRequest)(nil),       // 16: aether.api.RejectConnectionRequest
	(*ConnectionRequest)(nil),             // 17: aether.api.ConnectionRequest
	(*ConnectionResponse)(nil),            // 18: aether.api.ConnectionResponse
	(*timestamppb.Timestamp)(nil),         // 19: google.protobuf.Timestamp
	(PeerStatus)(0),                       // 20: aether.api.PeerStatus
	(*Status)(nil),                        // 21: aether.api.Status
	(*PaginationRequest)(nil),             // 22: aether.api.PaginationRequest
	(*PaginationResponse)(nil),            // 23: aether.api.PaginationResponse
}
var file_api_proto_peer_proto_depIdxs = []int32{
	19, // 0: aether.api.Peer.last_seen:type_name -> google.protobuf.Timestamp
	20, // 1: aether.api.Peer.status:type_name -> aether.api.PeerStatus
	19, // 2: aether.api.Peer.created_at:type_name -> google.protobuf.Timestamp
	19, // 3: aether.api.Peer.updated_at:type_name -> google.protobuf.Timestamp
	21, // 4: aether.api.DiscoverPeersResponse.status:type_name -> aether.api.Status
	0,  // 5: aether.api.DiscoverPeersResponse.peers:type_name -> aether.api.Peer
	22, // 6: aether.api.ListPeersRequest.pagination:type_name -> aether.api.PaginationRequest
	0,  // 7: aether.api.ListPeersResponse.peers:type_name -> aether.api.Peer
	23, // 8: aether.api.ListPeersResponse.pagination:type_name -> aether.api.PaginationResponse
	21, // 9: aether.api.PeerInfoResponse.status:type_name -> aether.api.Status
	0,  // 10: aether.api.PeerInfoResponse.peer:type_name -> aether.api.Peer
	19, // 11: aether.api.PeerInfoResponse.last_activity:type_name -> google.protobuf.Timestamp
	21, // 12: aether.api.GetPendingConnectionsResponse.status:type_name -> aether.api.Status
	14, // 13: aether.api.GetPendingConnectionsResponse.pending_connections:type_name -> aether.api.PendingConnection
	1,  // 14: aether.api.PeerService.DiscoverPeers:input_type -> aether.api.DiscoverPeersRequest
	3,  // 15: aether.api.PeerService.ConnectToPeer:input_type -> aether.api.ConnectToPeerRequest
	4,  // 16: aether.api.PeerService.DisconnectFromPeer:input_type -> aether.api.DisconnectFromPeerRequest
	5,  // 17: aether.api.PeerService.ListPeers:input_type -> aether.api.ListPeersRequest
	7,  // 18: aether.api.PeerService.GetPeerInfo:input_type -> aether.api.GetPeerInfoRequest
	9,  // 19: aether.api.PeerService.TrustPeer:input_type -> aether.api.TrustPeerRequest
	10, // 20: aether.api.PeerService.UntrustPeer:input_type -> aether.api.UntrustPeerRequest
	11, // 21: aether.api.PeerService.RemovePeer:input_type -> aether.api.RemovePeerRequest
	12, // 22: aether.api.PeerService.GetPendingConnections:input_type -> aether.api.GetPendingConnectionsRequest
	15, // 23: aether.api.PeerService.AcceptConnection:input_type -> aether.api.AcceptConnectionRequest
	16, // 24: aether.api.PeerService.RejectConnection:input_type -> aether.api.RejectConnectionRequest
	2,  // 25: aether.api.PeerService.DiscoverPeers:output_type -> aether.api.DiscoverPeersResponse
	21, // 26: aether.api.PeerService.ConnectToPeer:output_type -> aether.api.Status
	21, // 27: aether.api.PeerService.DisconnectFromPeer:output_type -> aether.api.Status
	6,  // 28: aether.api.PeerService.ListPeers:output_type -> aether.api.ListPeersResponse
	8,  // 29: aether.api.PeerService.GetPeerInfo:output_type -> aether.api.PeerInfoResponse
	21, // 30: aether.api.PeerService.TrustPeer:output_type -> aether.api.Status
	21, // 31: aether.api.PeerService.UntrustPeer:output_type -> aether.api.Status
	21, // 32: aether.api.PeerService.RemovePeer:output_type -> aether.api.Status
	13, // 33: aether.api.PeerService.GetPendingConnections:output_type -> aether.api.GetPendingConnectionsResponse
	21, // 34: aether.api.PeerService.AcceptConnection:output_type -> aether.api.Status
	21, // 35: aether.api.PeerService.RejectConnection:output_type -> aether.api.Status
	25, // [25:36] is the sub-list for method output_type
	14, // [14:25] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_api_proto_peer_proto_init() }
func file_api_proto_peer_proto_init() {
	if File_api_proto_peer_proto != nil {
		return
	}
	file_api_proto_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_peer_proto_rawDesc), len(file_api_proto_peer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_peer_proto_goTypes,
		DependencyIndexes: file_api_proto_peer_proto_depIdxs,
		MessageInfos:      file_api_proto_peer_proto_msgTypes,
	}.Build()
	File_api_proto_peer_proto = out.File
	file_api_proto_peer_proto_goTypes = nil
	file_api_proto_peer_proto_depIdxs = nil
}
