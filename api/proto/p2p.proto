syntax = "proto3";

package aether.api;

option go_package = "github.com/aether/sync/api/proto;proto";

import "api/proto/common.proto";

// P2P data transfer servisi
// Bu servis peer'lar arası direkt iletişim için kullanılır
service P2PDataService {
  // Chunk talep et
  rpc RequestChunk(ChunkRequest) returns (ChunkResponse);
  
  // Chunk gönder (streaming)
  rpc TransferChunk(stream ChunkData) returns (TransferStatus);
  
  // Dosya metadata'sını paylaş
  rpc ShareFileMetadata(FileMetadataRequest) returns (FileMetadataResponse);
  
  // Ping (bağlantı testi)
  rpc Ping(PingRequest) returns (PingResponse);
}

// Mesajlar

message ChunkRequest {
  string chunk_hash = 1;
  string file_id = 2;
  string requester_device_id = 3;
}

message ChunkResponse {
  Status status = 1;
  bytes chunk_data = 2;
  string chunk_hash = 3;
  int64 chunk_size = 4;
}

message ChunkData {
  string chunk_hash = 1;
  bytes data = 2;
  int64 offset = 3;
  int64 total_size = 4;
  bool is_final = 5;
}

message TransferStatus {
  Status status = 1;
  int64 bytes_received = 2;
  string received_hash = 3;
}

message FileMetadataRequest {
  string file_id = 1;
  string sender_device_id = 2;
}

message FileMetadataResponse {
  Status status = 1;
  string file_id = 2;
  string relative_path = 3;
  int64 size = 4;
  string global_hash = 5;
  repeated string chunk_hashes = 6;
}

message PingRequest {
  string device_id = 1;
  int64 timestamp = 2;
}

message PingResponse {
  Status status = 1;
  int64 timestamp = 2;
  int64 latency_ms = 3;
}





